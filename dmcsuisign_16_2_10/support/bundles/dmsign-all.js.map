{"version":3,"sources":["../../src/commands/sign/impl/nls/lang.js","../../src/commands/sign/impl/nls/root/lang.js","../../src/commands/sign/impl/nls/en/lang.js","../../src/commands/sign/impl/nls/lang!i18n","../../src/commands/sign/sign.command.js","../../src/commands/sign/sign.nodestable.toolitems.js","../../src/commands/sign/sign.metadata.menu.items.js","../../src/commands/sign/sign.search.results.toolbaritems.js","dmsign-all.js"],"names":["csui","define","root","en-us","toolbarButtonTitle","dialogTitle","signLabelSignWith","signLabelSignersCountry","signLabelPersonCode","signLabelPersonCodeSave","signLabelPhoneNumber","signLabelCountryLV","signLabelCountryLT","signLabelCountryEE","signLabelMethodSmartid","signLabelMethodMobileid","signLabelMethodIdcard","xSignLabelExternalSigning","xSignButtonTitleShareDocument","xSignFormMsgSavingPleaseWait","xSignFormLabelFirstName","xSignFormPlaceholderFirstName","xSignFormErrorMsgFirstName","xSignFormLabelLastName","xSignFormPlaceholderLastName","xSignFormErrorMsgLastName","xSignFormLabelCountry","xSignFormLabelPersonCode","xSignFormPlaceholderPersonCode","xSignFormErrorMsgPersonCode","xSignFormLabelEmail","xSignFormPlaceholderEmail","xSignFormErrorMsgEmail","xSignFormLabelComment","xSignFormPlaceholderComment","xSignFormLabelDueDate","xSignFormPlaceholderDueDate","xSignFormLabelNotificationLanguage","xSignFormButtonCancel","xSignFormButtonTitleCancel","xSignFormButtonResend","xSignFormButtonTitleResend","xSignFormButtonShare","xSignFormButtonClose","createLabelContainerCreation","createLabelContainerName","createLabelCreateNew","createButtonCreate","createrLabelInclude","createrLabelAddVersion","labelAttachments","labelSignatures","buttonDownload","buttonClose","buttonCreate","buttonCreateContainer","msgSaving","msgSaved","msgSigningError","msgSigningCancelledByUser","msgPinOk","msgEnterPin2VerificationCode","msgSigningInProgress","msgSigningCompleted","msgPreparingData","msgUnsupportedDocumentFormat","msgUnknownSigningMethod","msgSigningStarted","msgCreationStarted","msgCreationCompleted","msgCreationError","require","_","$","CommandModel","CommandHelper","ConnectorFactory","lang","extend","defaults","signature","name","enabled","status","enable","nodes","getAtLeastOneNode","models","length","checkNodeTypes","console","log","execute","options","deferred","Deferred","DialogView","PageContext","TileReportView","config","wrid","promise","map","v","get","context","connector","getObject","connection","resolve","wrnickname","makeAjaxCall","url","replace","done","data","results","properties","id","e","reject","wrParams","scroll","header","parameters","value","join","tileReportView","dialog","className","largeSize","view","title","show","fetch","css","on","window","location","reload","error","otherToolbar","inlineActionbar","dropdownMenuList","inlineToolbar"],"mappings":"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","file":"dmsign-all.js","sourcesContent":["csui.define('dmsign/commands/sign/impl/nls/lang',{\r\n  \"root\": true,\r\n  //\"lv\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  //\"en\": true\r\n});\n","csui.define('dmsign/commands/sign/impl/nls/root/lang',{\r\n  toolbarButtonTitle: 'Sign',\r\n  dialogTitle: 'Sign',\r\n  signLabelSignWith: \"Sign with...\",\r\n  signLabelSignersCountry: \"Signer's country\",\r\n  signLabelPersonCode: \"Person code\",\r\n  signLabelPersonCodeSave: \"Save person code\",\r\n  signLabelPhoneNumber: \"Phone number\",\r\n  signLabelCountryLV: \"Latvia\",\r\n  signLabelCountryLT: \"Lithuania\",\r\n  signLabelCountryEE: \"Estonia\",\r\n  signLabelMethodSmartid: \"SmartID\",\r\n  signLabelMethodMobileid: \"Mobile ID\",\r\n  signLabelMethodIdcard: \"ID Card\",\r\n  xSignLabelExternalSigning: \"External signing\",\r\n  xSignButtonTitleShareDocument: \"Share document for external signing\",\r\n  xSignFormMsgSavingPleaseWait: \"Saving, please wait...\",\r\n  xSignFormLabelFirstName: \"First name\",\r\n  xSignFormPlaceholderFirstName: \"First name\",\r\n  xSignFormErrorMsgFirstName: \"Please enter signer's first name\",\r\n  xSignFormLabelLastName: \"Last name\",\r\n  xSignFormPlaceholderLastName: \"Last name\",\r\n  xSignFormErrorMsgLastName: \"Please enter signer's last name\",\r\n  xSignFormLabelCountry: \"Country\",\r\n  xSignFormLabelPersonCode: \"Person code\",\r\n  xSignFormPlaceholderPersonCode: \"LV: XXXXXX-XXXXX, EE:XXXXXXXXXXX, LT:XXXXXXXXXXX\",\r\n  xSignFormErrorMsgPersonCode: \"Please enter signer's person code\",\r\n  xSignFormLabelEmail: \"E-mail\",\r\n  xSignFormPlaceholderEmail: \"Please enter signer's e-mail\",\r\n  xSignFormErrorMsgEmail: \"Please enter signer's e-mail\",\r\n  xSignFormLabelComment: \"Comment\",\r\n  xSignFormPlaceholderComment: \"Please enter comment\",\r\n  xSignFormLabelDueDate: \"Due date\",\r\n  xSignFormPlaceholderDueDate: \"Please enter due date\",\r\n  xSignFormLabelNotificationLanguage: \"Notification language\",\r\n  xSignFormButtonCancel: \"Cancel request\",\r\n  xSignFormButtonTitleCancel: \"This will cancel the signing request!\",\r\n  xSignFormButtonResend: \"Resend\",\r\n  xSignFormButtonTitleResend: \"This will set the system to inform the signer again!\",\r\n  xSignFormButtonShare: \"Share\",\r\n  xSignFormButtonClose: \"Close\",\r\n  createLabelContainerCreation: \"Container creation\",\r\n  createLabelContainerName: \"Container name\",\r\n  createLabelCreateNew: \"create new\",\r\n  createButtonCreate: \"Create\",\r\n  createrLabelInclude: \"include\",\r\n  createrLabelAddVersion: \"add version\",\r\n  labelAttachments: \"Attachments\",\r\n  labelSignatures: \"Signatures\",\r\n  buttonDownload: \"Download\",\r\n  buttonClose: \"Close\",\r\n  buttonCreate: \"Create\",\r\n  buttonCreateContainer: \"Create signing container\",\r\n  msgSaving: \"Saving...\",\r\n  msgSaved: \"Saved.\",\r\n  msgSigningError: \"Signing error.\",\r\n  msgSigningCancelledByUser: \"Signing cancelled by user.\",\r\n  msgPinOk: \"PIN OK. Signing completed.\",\r\n  msgEnterPin2VerificationCode: \"Enter PIN2. Verification code: \",\r\n  msgSigningInProgress: \"Signing in progress...\",\r\n  msgSigningCompleted: \"Signing completed.\",\r\n  msgPreparingData: \"Preparing data...\",\r\n  msgUnsupportedDocumentFormat: \"Unsupported document format.\",\r\n  msgUnknownSigningMethod: \"Unknown signing method.\",\r\n  msgSigningStarted: \"Signing started...\",\r\n  msgCreationStarted: \"Creation started...\",\r\n  msgCreationCompleted: \"Creation completed.\",\r\n  msgCreationError: \"Creation error.\"\r\n});\n","csui.define('dmsign/commands/sign/impl/nls/en/lang',{\r\n  toolbarButtonTitle: 'Sign',\r\n  dialogTitle: 'Sign',\r\n  signLabelSignWith: \"Sign with...\",\r\n  signLabelSignersCountry: \"Signer's country\",\r\n  signLabelPersonCode: \"Person code\",\r\n  signLabelPersonCodeSave: \"Save person code\",\r\n  signLabelPhoneNumber: \"Phone number\",\r\n  signLabelCountryLV: \"Latvia\",\r\n  signLabelCountryLT: \"Lithuania\",\r\n  signLabelCountryEE: \"Estonia\",\r\n  signLabelMethodSmartid: \"SmartID\",\r\n  signLabelMethodMobileid: \"Mobile ID\",\r\n  signLabelMethodIdcard: \"ID Card\",\r\n  xSignLabelExternalSigning: \"External signing\",\r\n  xSignButtonTitleShareDocument: \"Share document for external signing\",\r\n  xSignFormMsgSavingPleaseWait: \"Saving, please wait...\",\r\n  xSignFormLabelFirstName: \"First name\",\r\n  xSignFormPlaceholderFirstName: \"First name\",\r\n  xSignFormErrorMsgFirstName: \"Please enter signer's first name\",\r\n  xSignFormLabelLastName: \"Last name\",\r\n  xSignFormPlaceholderLastName: \"Last name\",\r\n  xSignFormErrorMsgLastName: \"Please enter signer's last name\",\r\n  xSignFormLabelCountry: \"Country\",\r\n  xSignFormLabelPersonCode: \"Person code\",\r\n  xSignFormPlaceholderPersonCode: \"LV: XXXXXX-XXXXX, EE:XXXXXXXXXXX, LT:XXXXXXXXXXX\",\r\n  xSignFormErrorMsgPersonCode: \"Please enter signer's person code\",\r\n  xSignFormLabelEmail: \"E-mail\",\r\n  xSignFormPlaceholderEmail: \"Please enter signer's e-mail\",\r\n  xSignFormErrorMsgEmail: \"Please enter signer's e-mail\",\r\n  xSignFormLabelComment: \"Comment\",\r\n  xSignFormPlaceholderComment: \"Please enter comment\",\r\n  xSignFormLabelDueDate: \"Due date\",\r\n  xSignFormPlaceholderDueDate: \"Please enter due date\",\r\n  xSignFormLabelNotificationLanguage: \"Notification language\",\r\n  xSignFormButtonCancel: \"Cancel request\",\r\n  xSignFormButtonTitleCancel: \"This will cancel the signing request!\",\r\n  xSignFormButtonResend: \"Resend\",\r\n  xSignFormButtonTitleResend: \"This will set the system to inform the signer again!\",\r\n  xSignFormButtonShare: \"Share\",\r\n  xSignFormButtonClose: \"Close\",\r\n  createLabelContainerCreation: \"Container creation\",\r\n  createLabelContainerName: \"Container name\",\r\n  createLabelCreateNew: \"create new\",\r\n  createButtonCreate: \"Create\",\r\n  createrLabelInclude: \"include\",\r\n  createrLabelAddVersion: \"add version\",\r\n  labelAttachments: \"Attachments\",\r\n  labelSignatures: \"Signatures\",\r\n  buttonDownload: \"Download\",\r\n  buttonClose: \"Close\",\r\n  buttonCreate: \"Create\",\r\n  buttonCreateContainer: \"Create signing container\",\r\n  msgSaving: \"Saving...\",\r\n  msgSaved: \"Saved.\",\r\n  msgSigningError: \"Signing error.\",\r\n  msgSigningCancelledByUser: \"Signing cancelled by user.\",\r\n  msgPinOk: \"PIN OK. Signing completed.\",\r\n  msgEnterPin2VerificationCode: \"Enter PIN2. Verification code: \",\r\n  msgSigningInProgress: \"Signing in progress...\",\r\n  msgSigningCompleted: \"Signing completed.\",\r\n  msgPreparingData: \"Preparing data...\",\r\n  msgUnsupportedDocumentFormat: \"Unsupported document format.\",\r\n  msgUnknownSigningMethod: \"Unknown signing method.\",\r\n  msgSigningStarted: \"Signing started...\",\r\n  msgCreationStarted: \"Creation started...\",\r\n  msgCreationCompleted: \"Creation completed.\",\r\n  msgCreationError: \"Creation error.\"\r\n});\n","\n","csui.define('dmsign/commands/sign/sign.command',['require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/contexts/factories/connector',\r\n  'i18n!dmsign/commands/sign/impl/nls/lang'\r\n], function (require, _, $, CommandModel, CommandHelper, ConnectorFactory, lang) {\r\n  'use strict';\r\n  var SignCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'dm-sign',\r\n      name: lang.toolbarButtonTitle\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var enable = false;\r\n      var nodes = CommandHelper.getAtLeastOneNode(status).models;\r\n\r\n      if (!!nodes.length) {\r\n        enable = CommandHelper.checkNodeTypes(nodes,[144]);\r\n      }\r\nconsole.log('DM signing: ',enable)\r\n      return enable;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      // Require additional modules needed for the command execution first\r\n      // when they are needed here; not right away in the module callback\r\n      require([\r\n        'csui/controls/dialog/dialog.view',\r\n        'csui/utils/contexts/page/page.context',\r\n        'webreports/widgets/tilereport/tilereport.view',\r\n        'json!dmsign/config/sign.config.json'\r\n      ], function (DialogView, PageContext, TileReportView, config) {\r\n        var wrid = config.wrid;\r\n        var promise = $.Deferred();\r\n        var nodes = _.map(CommandHelper.getAtLeastOneNode(status).models,function (v) { return v.get('id'); });\r\n        var context = new PageContext();\r\n        var connector = context.getObject(ConnectorFactory);\r\n        var connection = connector.connection;\r\n\r\n        if (wrid) {\r\n          promise.resolve();\r\n        } else if (config.wrnickname) {\r\n          connector.makeAjaxCall({ url: connection.url.replace('v1','v2') + '/nicknames/' + config.wrnickname + '/nodes' })\r\n          .done(function(data){\r\n            try {\r\n              wrid = data.results.data.properties.id;\r\n              promise.resolve();\r\n            } catch (e) {\r\n              promise.reject();\r\n            }\r\n          });\r\n        }\r\n\r\n        promise.done(function(){\r\n          var wrParams = {\r\n            id: wrid,\r\n            scroll: true,\r\n            header: false,\r\n            parameters: [\r\n              {\r\n                name: 'nodeid',\r\n                value: nodes.join(',')\r\n              }\r\n            ]\r\n          };\r\n        \r\n          //Create the data managing context\r\n          var context = new PageContext();\r\n\r\n          var tileReportView = new TileReportView({\r\n              context: context,\r\n              data: wrParams\r\n          });\r\n        \r\n          var dialog = new DialogView({\r\n            className: 'dm-dialog',\r\n            largeSize: true,\r\n            view: tileReportView,\r\n            title: lang.dialogTitle\r\n          });\r\n        \r\n          dialog.show();\r\n        \r\n          context.fetch()\r\n          .done(function(){\r\n            //hack of height style to make content scrollable\r\n            $('.dm-dialog .tile-content').css('height','66vh');\r\n            deferred.resolve();\r\n          });\r\n\r\n          dialog.on('destroy', function () {\r\n            window.location.reload();\r\n          });\r\n\r\n        });\r\n        \r\n      }, function (error) {\r\n        // Pass the module loading error to be handled by the caller\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return SignCommand;\r\n\r\n});\r\n\n","csui.define('dmsign/commands/sign/sign.nodestable.toolitems',['i18n!dmsign/commands/sign/impl/nls/lang'\r\n], function (lang) {\r\n  'use strict';\r\n\r\n  return {\r\n    otherToolbar: [\r\n      {\r\n        signature: 'dm-sign',\r\n        name: lang.toolbarButtonTitle\r\n      }\r\n    ],\r\n    inlineActionbar: [\r\n      {\r\n        signature: 'dm-sign',\r\n        name: lang.toolbarButtonTitle\r\n      }\r\n    ]\r\n  };\r\n\r\n});\n","csui.define('dmsign/commands/sign/sign.metadata.menu.items',['i18n!dmsign/commands/sign/impl/nls/lang'\r\n], function (lang) {\r\n  'use strict';\r\n\r\n  return {\r\n    dropdownMenuList: [\r\n      {\r\n        signature: 'dm-sign',\r\n        name: lang.toolbarButtonTitle\r\n      }\r\n    ]\r\n  };\r\n\r\n});\r\n\n","csui.define('dmsign/commands/sign/sign.search.results.toolbaritems',['i18n!dmsign/commands/sign/impl/nls/lang'\r\n], function (lang) {\r\n  'use strict';\r\n\r\n  return {\r\n    inlineToolbar: [\r\n      {\r\n        signature: 'dm-sign',\r\n        name: lang.toolbarButtonTitle\r\n      }\r\n    ],\r\n    otherToolbar: [\r\n      {\r\n        signature: 'dm-sign',\r\n        name: lang.toolbarButtonTitle\r\n      }\r\n    ]\r\n  };\r\n\r\n});\n","// Placeholder for the build target file; the name must be the same,\r\n// include public modules from this component\r\n\r\ncsui.define('bundles/dmsign-all',[\r\n  // add public files for this module here\r\n  \"dmsign/commands/sign/sign.command\",\r\n  \"dmsign/commands/sign/sign.nodestable.toolitems\",\r\n  \"dmsign/commands/sign/sign.metadata.menu.items\",\r\n  \"dmsign/commands/sign/sign.search.results.toolbaritems\"\r\n], {});\r\n/*\r\nrequire([\r\n  'require',\r\n  'css'\r\n], function (require, css) {\r\n  // Load the bundle-specific stylesheet\r\n  css.styleLoad(require, 'dmsign/bundles/dmsign-all');\r\n});\r\n*/;\n"]}